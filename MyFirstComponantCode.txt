My Componant:-

Cmp1:-
----------------------------------
Html
----------------------------------

<template >
    <lightning-card title="Displaying Records Based on Selected Number Using Lightning DataTable" icon-name="custom:custom102">
        <div class="slds-m-around_medium">
            <lightning-combobox
                name="ComboBox"
                label="Select Records Per Page"
                options={comboBoxOptions}
                value={pageSize}
                onchange={handleComboBoxChange}
                
                ></lightning-combobox>
            <lightning-input type="search" onchange={handleKeyChange} class="slds-m-bottom_small" label="Search"
                value={searchKey}></lightning-input>
            <lightning-datatable key-field="Id" data={data} columns={columns} sorted-by={sortedBy}
                sorted-direction={sortedDirection} onsort={sortColumns}>
            </lightning-datatable>
            </br>
            <lightning-layout horizontal-align="space">
                <lightning-layout-item flexibility="auto">
                    <lightning-button label="Previous" icon-name="utility:chevronleft" onclick={previousHandler} disabled={disablePrevious}>
                    </lightning-button>
                </lightning-layout-item>
                <lightning-layout-item flexibility="auto">
                    Page {page} of {totalPage}
                </lightning-layout-item>
                <lightning-layout-item flexibility="auto">
                    <lightning-button label="Next" icon-name="utility:chevronright" icon-position="right"
                        onclick={nextHandler} disabled={disableNext}></lightning-button>
                </lightning-layout-item>
            </lightning-layout>
        </div>
    </lightning-card>
</template>

-------------------------------------------
JS
-------------------------------------------

import { LightningElement, wire, api, track} from 'lwc';
import { refreshApex } from '@salesforce/apex';
import getAccountList from '@salesforce/apex/ControllerForCmp1.getAccountList';

const columns=[

    {label:'Account Name',fieldName:'Name',type:'Text',sortable:true},
    {label:'Phone',fieldName:'Phone',type:'phone',sortable:true},
    {label:'Type',fieldName:'Type',type:'Text',sortable:true},
    {label:'Industry',fieldName:'Industry',type:'Text',sortable:true},
    {label:'Revenue',fieldName:'AnnualRevenue',type:'currency',sortable:true},
    {label:'Rating',fieldName:'Rating',type:'Text',sortable:true},
];

export default class cmp1 extends LightningElement {
     error;
     data;
     columns;
    @api sortedDirection = 'asc';
    @api sortedBy = 'Name';
    @api searchKey = '';
    result;
    
     page = 1; 
     items = []; 
     data = []; 
     startingRecord = 1;
     endingRecord = 0; 
     pageSize='5'; 
     totalRecordCount = 0;
     totalPage = 0;

    get comboBoxOptions()
    {
        return [
            {label:'5',value:this.pazeSize},
            {label:'10',value:'10'},
            {label:'15',value:'15'},
            {label:'20',value:'20'},
        ];
    }
    constructor()
    {
        super();
        this.pazeSize='5';
    }
    @wire(getAccountList, {searchKey: '$searchKey', sortBy: '$sortedBy', sortDirection: '$sortedDirection'})
    wiredAccounts({ error, data }) {
        if (data) {
        
            this.items = data;
            this.totalRecordCount = data.length; 
            this.totalPage = Math.ceil(this.totalRecordCount / this.pageSize); 
            
            this.data = this.items.slice(0,this.pageSize); 
            this.endingRecord = this.pageSize;
            this.columns = columns;

            this.error = undefined;
        } else if (error) {
            this.error = error;
            this.data = undefined;
        }
    }

    handleComboBoxChange(event)
    {
        this.page=1;
        this.pageSize=event.detail.value;
        this.totalPage = Math.ceil(this.totalRecordCount / this.pageSize); 
        this.displayRecordPerPage(this.page);
    }

    //clicking on previous button this method will be called
    previousHandler() {
        if (this.page > 1) {
            this.page = this.page - 1; //decrease page by 1
            this.displayRecordPerPage(this.page);
        }
    }

    //clicking on next button this method will be called
    nextHandler() {
        if((this.page<this.totalPage) && this.page !== this.totalPage){
            this.page = this.page + 1; //increase page by 1
            this.displayRecordPerPage(this.page);            
        }             
    }

    //this method displays records page by page
    displayRecordPerPage(page){

        this.startingRecord = ((page -1) * this.pageSize) ;
        this.endingRecord = (this.pageSize * page);

        this.endingRecord = (this.endingRecord > this.totalRecountCount) 
                            ? this.totalRecountCount : this.endingRecord; 

        this.data = this.items.slice(this.startingRecord, this.endingRecord);

        
    }    
    
    sortColumns( event ) {
        this.sortedBy = event.detail.fieldName;
        this.sortedDirection = event.detail.sortDirection;
        return refreshApex(this.result);
        
    }
  
    handleKeyChange( event ) {
        this.searchKey = event.target.value;
        return refreshApex(this.result);
    }

     //Disable the previous button when current page=1.
     get disablePrevious()
     {
         return this.page<=1;
     }
     //Disable the next button when current page=totalpage.
     get disableNext()
     {
         return this.page>=this.totalPage;
     }

}

-------------------------------------------
Meta File
-------------------------------------------

<?xml version="1.0" encoding="UTF-8"?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <isExposed>true</isExposed>
    <targets>
        <target>lightning__AppPage</target>
        <target>lightning__HomePage</target>
        <target>lightning__RecordPage</target>
    </targets>
</LightningComponentBundle>

-------------------------------------------------
Apex Controller
-------------------------------------------------

public class ControllerForCmp1 
{
	@AuraEnabled(cacheable=true)
   public static List<Account> getAccountList( String searchKey, String sortBy, String sortDirection) {
      
       String query = 'SELECT Name,phone,type,Industry,AnnualRevenue,Rating from Account';
     
       if ( searchKey != null && searchKey != '' ) 
       {
           String key = '%' + searchKey + '%';
           query += ' WHERE Name LIKE : key or Phone like :key or Type like :key or Industry like :key or Rating like :key ';
               		
       }
       if ( sortBy != null && sortDirection != null ) 
       {
           query += ' ORDER BY ' + sortBy + ' ' + sortDirection;
       }
       return Database.query( query );
   }
}